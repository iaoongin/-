{"pages":[],"posts":[{"title":"Welcome","text":"","link":"/2019/08/14/Welcome/"},{"title":"logstash input-jdbc 分页性能优化问题","text":"原因logstash 自带分页查询,竟然是查处所有数据再计数的。 1SELECT count(*) AS `count` FROM (SELECT * FROM ip_bundle_data_20190813) AS `t1` LIMIT 1 解决办法：修改源码 文件位置 1logstash-7.2.0\\vendor\\bundle\\jruby\\2.5.0\\gems\\logstash-input-jdbc-4.3.13\\lib\\logstash\\plugin_mixins\\jdbc\\jdbc.rb 添加参数 123456// line:100 =&gt; config# 开启子查询分页 @boole 2018-03-30config :subquery_paging_enabled, :validate =&gt; :boolean, :default =&gt; false# 总数sql，结果集列名为sum。for example `select count(*) as sum from goods` @boole 2018-03-30config :sum_statement, :validate =&gt; :string 修改方法 123456789101112131415161718192021222324252627282930// line:254 =&gt; perform_queryprivate def perform_query(query) #subquery paging @boole 2018-03-30 if @subquery_paging_enabled @logger.info(&quot;################### subquery paging optimization ################&quot;) data_sum = @database[@sum_statement].get(:sum) @logger.info(&quot;data_sum=#{data_sum}&quot;) data_offset = 0 while data_offset &lt; data_sum do @logger.info(&quot;data_offset=#{data_offset}&quot;) sub_page_query = @database[@statement_duplicate, symbolized_params({&quot;data_offset&quot; =&gt; data_offset, &quot;jdbc_page_size&quot; =&gt; @jdbc_page_size})] sub_page_query.each do |row| yield row end data_offset += @jdbc_page_size end elsif @jdbc_paging_enabled query.each_page(@jdbc_page_size) do |paged_dataset| paged_dataset.each do |row| yield row end end else query.each do |row| yield row end end end 配置logstash.conf sql中使用:data_offset和:jdbc_page_size进行分页 12345statement =&gt; &quot;SELECT * FROM ip_bundle_data_20190813 limit :data_offset,:jdbc_page_size&quot;subquery_paging_enabled =&gt; &quot;true&quot;sum_statement =&gt; &quot;select count(*) as `count` from ip_bundle_data_20190813&quot;","link":"/2019/08/14/logstash 分页优化/"}],"tags":[{"name":"elk","slug":"elk","link":"/tags/elk/"},{"name":"logstash","slug":"logstash","link":"/tags/logstash/"}],"categories":[]}